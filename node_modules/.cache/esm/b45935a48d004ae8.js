let fs,merge,log;_8d0‍.x([["resolvers",()=>resolvers]]);_8d0‍.w("fs",[["default",["fs"],function(v){fs=v}]]);_8d0‍.w("lodash",[["merge",["merge"],function(v){merge=v}]]);_8d0‍.w("../utils/utils.js",[["log",["log"],function(v){log=v}]]);



let resolvers =  {};

log.info("Bundling resolvers..");

let typeFiles = fs.readdirSync(__dirname + "/../types");

for (var i = 0; i < typeFiles.length; i++) {
  let typeFile = typeFiles[i];
  if (typeFile.endsWith(".js")) {
    let typeFilePath = fs.realpathSync(__dirname + "/../types/" + typeFile);
    merge(resolvers, require(typeFilePath).resolvers);
  }
}

let mutationFiles = fs.readdirSync(__dirname + "/../mutations");

for (var i = 0; i < mutationFiles.length; i++) {
  let mutationFile = mutationFiles[i];
  if (mutationFile.endsWith(".js")) {
    let mutationFilePath = fs.realpathSync(__dirname + "/../mutations/" + mutationFile);
    merge(resolvers, require(mutationFilePath).resolvers);
  }
}


