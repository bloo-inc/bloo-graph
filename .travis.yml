# Use Dockerized infrastructure
sudo: false

language: node_js

services:
  - docker

cache:
  directories:
    - "$HOME/google-cloud-sdk/"

env:
  global:
    - GOOGLE_APPLICATION_CREDENTIALS=~/gcloud-service-key.json
    - PROJECT_NAME_STG=bloo-cloud
    - CLUSTER_NAME_STG=bloo-cluster
    - PROJECT_NAME_PRD=bloo-cloud
    - CLUSTER_NAME_PRD=bloo-cluster
    - CLOUDSDK_COMPUTE_ZONE=europe-west3-a
    - DOCKER_IMAGE_NAME=bloo-graph
    - KUBE_DEPLOYMENT_NAME=bloo-graph
    - KUBE_DEPLOYMENT_CONTAINER_NAME=bloo-graph

before_build:
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
  - source /home/travis/google-cloud-sdk/path.bash.inc
  - gcloud --quiet version
  - gcloud --quiet components update
  - gcloud --quiet components beta update
  - gcloud --quiet components update kubectl

build:
  - docker build -t gcr.io/${PROJECT_NAME_PRD}/${DOCKER_IMAGE_NAME}:$TRAVIS_COMMIT .
  - echo $GCLOUD_SERVICE_KEY | base64 --decode -i > ${HOME}/gcloud-service-key.json
  - gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
  - gcloud --quiet config set project $PROJECT_NAME_PRD
  - gcloud --quiet config set container/cluster $CLUSTER_NAME_PRD
  - gcloud --quiet config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
  - gcloud --quiet container clusters get-credentials $CLUSTER_NAME_PRD
  - gcloud docker push gcr.io/${PROJECT_NAME_PRD}/${DOCKER_IMAGE_NAME}
  - yes | gcloud beta container images add-tag gcr.io/${PROJECT_NAME_PRD}/${DOCKER_IMAGE_NAME}:$TRAVIS_COMMIT gcr.io/${PROJECT_NAME_PRD}/${DOCKER_IMAGE_NAME}:latest
  - kubectl config view
  - kubectl config current-context
  - kubectl set image deployment/${KUBE_DEPLOYMENT_NAME} ${KUBE_DEPLOYMENT_CONTAINER_NAME}=gcr.io/${PROJECT_NAME_PRD}/${DOCKER_IMAGE_NAME}:$TRAVIS_COMMIT
